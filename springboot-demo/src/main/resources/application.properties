# 配置文件环境
spring.profiles.active=dev

#服务端口，默认为8080
server.port=8080

#日志文件
logging.file=./springboot.log
#日志级别，默认为INFO
logging.level.org.springframework.web=INFO

# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=root

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=10
spring.datasource.max-idle=8
spring.datasource.minIdle=8
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROMDUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

########################################################
###REDIS (RedisProperties) redis基本配置；
########################################################
# database name
spring.redis.database=0
# server host1
spring.redis.host=127.0.0.1
# server password
#spring.redis.password=
#connection port
spring.redis.port=6379
# pool settings ...
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
# name of Redis server
#spring.redis.sentinel.master=
# comma-separated list of host:portpairs
#spring.redis.sentinel.nodes=

########################################################
###JPA配置
########################################################
spring.jpa.database=MYSQL
spring.jpa.show-sql=true
#Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
#[org.hibernate.cfg.ImprovedNamingStrategy  #org.hibernate.cfg.DefaultNamingStrategy]
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# the context path, defaults to '/'
# 项目contextPath，一般在正式发布版本中，我们不配置
# server.context-path=/spring-boot
# 错误页：指定发生错误时，跳转的URL。请查看BasicErrorController。
server.error.path=/error
# session最大超时时间(分钟)，默认为30
server.session-timeout=60

# ${pageContext.request.contextPath}/test.jpg
# 默认资源映射META-INF/resources > resources > static >public
# 定义静态资源的映射
spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

########################################################
###THYMELEAF(ThymeleafAutoConfiguration)
########################################################
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
# ;charset=<encoding>is added
#spring.thymeleaf.content-type=text/html
# set to false for hot refresh
spring.thymeleaf.cache=false
# 设置非严格模式，并加net.sourceforge.nekohtml，闭合标签问题
spring.thymeleaf.mode=LEGACYHTML5

########################################################
###FREEMARKER(FreeMarkerAutoConfiguration)
########################################################
spring.freemarker.allow-request-override=false
spring.freemarker.cache=true
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false
#spring.freemarker.prefix=
#spring.freemarker.request-context-attribute=
#spring.freemarker.settings.*=
#spring.freemarker.suffix=.ftl
#spring.freemarker.template-loader-path=classpath:/templates/#comma-separated list
#spring.freemarker.view-names=#whitelist ofview names that can beresolved

########################################################
###JSP，页面在src/main/webapp/WEB-INF/jsp
########################################################
#页面默认前缀目录
spring.mvc.view.prefix=/WEB-INF/jsp/
#响应页面默认后缀
spring.mvc.view.suffix=.jsp
#自定义属性，可以在Controller中读取
application.hello=fromTemplateController.helloJsp

#开启CGLIB动态代理模式，springboot默认是Java的动态代理模式
#spring.aop.proxy-target-class=true

########################################################
### i18n setting.
########################################################
#指定message的basename，多个以逗号分隔，如果不加包名的话，默认从classpath路径开始，默认: messages
spring.messages.basename=i18n/messages
#设定加载的资源文件缓存失效时间，-1的话为永不过期，默认为-1
spring.messages.cache-seconds= 1
#设定Message bundles的编码，默认: UTF-8
#spring.messages.encoding=UTF-8

########################################################
###mail setting
########################################################
#设置邮箱主机
spring.mail.host=smtp.163.com
#设置用户名
spring.mail.username=wangxiongxp@163.com
#设置密码
spring.mail.password=wangxiongxp123
#设置是否需要认证，如果为true,那么用户名和密码就必须的，
#如果设置false，可以不设置用户名和密码，当然也得看你的对接的平台是否支持无密码进行访问的。
spring.mail.properties.mail.smtp.auth=true
# STARTTLS[1] 是对纯文本通信协议的扩展。它提供一种方式将纯文本连接升级为加密连接（TLS或SSL），而不是另外使用一个端口作加密通信。
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true






